---
- name: Setup dotfiles
  hosts: default
  tasks:
    - name: Install packages with apt
      become: yes
      ansible.builtin.apt:
        name:
          - build-essential
          - bat
          - kitty
          - stow
          - tmux
          - zsh
        state: present

    - name: Install i3 packages with apt
      become: yes
      ansible.builtin.apt:
        name:
          - i3
          - feh
          - polybar
          - blueman
          - maim
        state: present

    - name: Install packages with snap
      become: yes
      community.general.snap:
        name:
          - nvim
        state: present
        classic: true

    - name: Run Oh My Zsh installation script
      shell: |
        if [ ! -d "/home/{{ ansible_user_id }}/.oh-my-zsh" ]; then
          sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
        fi
      become: no
      environment:
        ZSH: "/home/{{ ansible_user_id }}/.oh-my-zsh"

    - name: Download FiraCode Nerd Font
      ansible.builtin.shell: |
        curl -OL https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FiraCode.tar.xz
      args:
        chdir: "{{ ansible_env.HOME }}"
      register: download_result
      changed_when: download_result.rc == 0

    - name: Create fonts directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.local/share/fonts"
        state: directory
        mode: '0755'

    - name: Extract FiraCode Nerd Font
      ansible.builtin.shell: |
        tar -xf FiraCode.tar.xz -C "{{ ansible_env.HOME }}/.local/share/fonts"
      args:
        chdir: "{{ ansible_env.HOME }}"
      register: extract_result
      changed_when: extract_result.rc == 0

    - name: Remove the tar file
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/FiraCode.tar.xz"
        state: absent

    - name: Refresh font cache
      ansible.builtin.shell: |
        fc-cache -fv
      changed_when: false

    - name: Remove files that will conflict with Stow
      loop:
        - .zshrc
        - .tmux.conf
        - .profile
        - .wallpaper.jpg
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/{{ item }}"
        state: absent

    - name: Run stow
      shell: "stow . --target {{ ansible_env.HOME }} --verbose=2"
      register: result
      changed_when: "'LINK: ' in result.stderr"
